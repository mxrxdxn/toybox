@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:meta";

@import "~flexya/src/variables";
@import "~flexya/src/functions";
@import "~flexya/src/mixins";

@function contains-space($input) {
    @if meta.type-of($input) == "list" and list.separator($input) == space {
        @return true;
    }

    @return false;
}

@function is-px($value) {
    @if meta.type-of($value) == string {
        @return false;
    }

    @return math.unit($value) == px;
}

@function rem($size) {
    @if contains-space($size) {
        $props: ();

        @each $s in $size {
            @if is-px($s) {
                $s: rem($s);
            }

            $props: list.append($props, $s);
        }

        @return $props;
    } @else {
        $remSize: math.div($size, 16px);
        @return #{$remSize}rem;
    }
}

// Fetch a color from a given map
// Deprecated, use CSS variables instead.
@function color($colorName, $map: "additional") {
    $innerMap: map.get($colorMap, $map);
    @return map.get($innerMap, $colorName);
}

// Set the font properties - family, size, line height and weight
@mixin fontPx($family: $defaultFontStack, $size: 16px, $lineHeight: 24px, $weight: 400) {
    line-height: rem($lineHeight);

    font: {
        family: $family;
        size: rem($size);
        weight: $weight;
    }
}

// Custom mixins can be added below here.
